from pyrogram import Client, filters
from pyrogram.enums import ChatType, ParseMode
from pyrogram.types import InlineKeyboardButton, InlineKeyboardMarkup, Message
from youtubesearchpython.__future__ import VideosSearch
from YukkiMusic.utils.decorators.language import LanguageStart
from config import SUPPORT_GROUP, OWNER_ID, SUPPORT_CHANNEL, START_IMG_URL

PM_START_TEXT = """
 ú·¥á è {0}, ü•Ä
‡πè ·¥õ ú…™s …™s** {1} !

‚ûª ·¥Ä “ì·¥Äs·¥õ ·¥Ä…¥·¥Ö ·¥ò·¥è·¥°·¥á Ä“ì·¥ú ü ·¥ç·¥ús…™·¥Ñ ·¥ò ü·¥Ä è·¥á Ä  ô·¥è·¥õ.
"""

START_TEXT = """
** ú·¥á è** {0}, ü•Ä
  {1} ·¥Ñ·¥Ä…¥ …¥·¥è·¥° ·¥© ü·¥Ä è s·¥è…¥…¢s …™…¥ {2}.

‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
‚ûª “ì·¥è Ä …¢·¥á·¥õ·¥õ…™…¥…¢  ú·¥á ü·¥ò ·¥Ä ô·¥è·¥ú·¥õ ·¥ç·¥á ·¥è Ä …™“ì  è·¥è·¥ú ·¥°·¥Ä…¥…¥·¥Ä ·¥Äs·¥ã s·¥è·¥ç·¥á·¥õ ú…™…¥…¢  è·¥è·¥ú ·¥Ñ·¥Ä…¥ ·¥ä·¥è…™…¥ ·¥ç è [s·¥ú·¥ò·¥ò·¥è Ä·¥õ ·¥Ñ ú·¥Ä·¥õ]({3}).
"""


@Client.on_message(filters.command(["start"]) & ~filters.forwarded)
@Client.on_edited_message(filters.command(["start"]) & ~filters.forwarded)
@LanguageStart
async def clone_st(client, message: Message, _):
    viv = await client.get_me()
    if message.chat.type == ChatType.PRIVATE:
        if len(message.text.split()) > 1:
            cmd = message.text.split(None, 1)[1]
            if cmd[0:3] == "inf":
                m = await message.reply_text("üîé")
                query = (str(cmd)).replace("info_", "", 1)
                query = f"https://www.youtube.com/watch?v={query}"
                results = VideosSearch(query, limit=1)
                for result in (await results.next())["result"]:
                    title = result["title"]
                    duration = result["duration"]
                    views = result["viewCount"]["short"]
                    thumbnail = result["thumbnails"][0]["url"].split("?")[0]
                    channellink = result["channel"]["link"]
                    channel = result["channel"]["name"]
                    link = result["link"]
                    published = result["publishedTime"]
                searched_text = f"""
‚ûª **·¥õ Ä·¥Ä·¥Ñ·¥ã …™…¥“ì·¥è Ä…¥·¥Ä·¥õ…™·¥è…¥** 

üìå **·¥õ…™·¥õ ü·¥á :** {title}

‚è≥ **·¥Ö·¥ú Ä·¥Ä·¥õ…™·¥è…¥ :** {duration} ·¥ç…™…¥·¥ú·¥õ·¥ás
üëÄ **·¥†…™·¥á·¥°s :** `{views}`
‚è∞ **·¥©·¥ú ô ü…™s ú·¥á·¥Ö ·¥è…¥ :** {published}
üîó ** ü…™…¥·¥ã :** [·¥°·¥Ä·¥õ·¥Ñ ú ·¥è…¥  è·¥è·¥ú·¥õ·¥ú ô·¥á]({link})
üé• **·¥Ñ ú·¥Ä…¥…¥·¥á ü :** [{channel}]({channellink})

üíñ s·¥á·¥Ä Ä·¥Ñ ú ·¥©·¥è·¥°·¥á Ä·¥á·¥Ö  ô è {viv.name}"""
                key = InlineKeyboardMarkup(
                    [
                        [
                            InlineKeyboardButton(text=" è·¥è·¥ú·¥õ·¥ú ô·¥á", url=link),
                            InlineKeyboardButton(text="s·¥ú·¥©·¥©·¥è Ä·¥õ", url=SUPPORT_GROUP),
                        ],
                    ]
                )
                await m.delete()
                return await client.send_photo(
                    message.chat.id,
                    photo=thumbnail,
                    caption=searched_text,
                    parse_mode=ParseMode.MARKDOWN,
                    reply_markup=key,
                )
        else:
            pm_buttons = [
                [
                    InlineKeyboardButton(
                        text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò",
                        url=f"https://t.me/{viv.username}?startgroup=true",
                    )
                ],
                [
                    InlineKeyboardButton(
                        text=" ú·¥á ü·¥© & ·¥Ñ·¥è·¥ç·¥ç·¥Ä…¥·¥Ös", callback_data="clone_help"
                    )
                ],
                [
                    InlineKeyboardButton(text="‚ùÑ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ‚ùÑ", url=SUPPORT_CHANNEL),
                    InlineKeyboardButton(text="‚ú® s·¥ú·¥©·¥©·¥è Ä·¥õ ‚ú®", url=SUPPORT_GROUP),
                ],
            ]

            await message.reply_photo(
                photo=START_IMG_URL,
                caption=PM_START_TEXT.format(
                    message.from_user.first_name,
                    viv.mention,
                ),
                reply_markup=InlineKeyboardMarkup(pm_buttons),
            )
    else:
        gp_buttons = [
            [
                InlineKeyboardButton(
                    text="·¥Ä·¥Ö·¥Ö ·¥ç·¥á ·¥õ·¥è  è·¥è·¥ú Ä …¢ Ä·¥è·¥ú·¥ò",
                    url=f"https://t.me/{viv.username}?startgroup=true",
                )
            ],
            [
                InlineKeyboardButton(text="‚ùÑ ·¥Ñ ú·¥Ä…¥…¥·¥á ü ‚ùÑ", url=SUPPORT_CHANNEL),
                InlineKeyboardButton(text="‚ú® s·¥ú·¥©·¥©·¥è Ä·¥õ ‚ú®", url=SUPPORT_GROUP),
            ],
        ]

        await message.reply_photo(
            photo=START_IMG_URL,
            caption=START_TEXT.format(
                message.from_user.first_name,
                viv.mention,
                message.chat.title,
                SUPPORT_GROUP,
            ),
            reply_markup=InlineKeyboardMarkup(gp_buttons),
        )
